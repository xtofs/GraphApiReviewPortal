@page "/"
@using Model
@inject ApiReviewService ApiReviewService

<PageTitle>Graph API reviews</PageTitle>

<h1>Graph API reviews</h1>

@* <p>This component demonstrates fetching data from a service.</p> *@

@if (reviews == null)
{
        <p><em>Loading...</em></p>
}
else
{
<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Title</th>
            <th>Owner</th>
            <th>PR</th>
            <th>Reviewers</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in reviews)
    {
            <tr>
                <td><a href="@item.Url" target="_blank" rel="noopener noreferrer">@(item.WorkItemId)</a></td>
                <td>@item.Title</td>
                <td>@item.Owner.Name</td>
                <td><a href="@item.PullRequest.Url" target="_blank" rel="noopener noreferrer">@(item.PullRequest?.Status ?? "")</a></td>
                <td>
                @foreach (var status in item.PullRequest.ReviewStatus)
                {
                    
                     <img src="img/@(status.Vote).svg"/><text> <b>@status.Name</b>: @status.Vote<br/></text>
                }
                </td> 
            </tr>
        }
    </tbody>
</table>
}
                    
@code {
    private ApiReviewRequest[]? reviews;
                
    protected override async Task  OnInitializedAsync()
    {
        var items = await ApiReviewService.GetApiReviewRequests();
        reviews = items.ToArray();
    }
}
